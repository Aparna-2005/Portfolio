Databases
	Data operations : CRUD --> Create, Read, Update, De;ete
	SQL is a standared language that can interact with structured data on databases.
	A database interprets and make sense of SQL instructions with the use of a Database Management System or DBMS.
	The DBMS takes responsibility for transforming SQL instructions into a form that's understood by the underlying database.
	
SQL
  SQL subsets
	DDL - data definition language
		1.create -->  It is used to create a new table in the database.
		2.drop --> It is used to delete both the structure and record stored in the table(database).
		3.alter --> used to alter the table record ( add the column, remove the column, change the datatype of the column, rename the column)
		4.truncate --> It is used to delete all the rows from the table and free the space containing the table.
		4.Rename --> used to rename the name of the table
	DML - data manipulation language
		1.insert --> It is used to insert data into the row of a table.
		2.update --> used to update or modify the value of a column in the table.SET clauses is used to specify the location in the table where the update must take place?
		3.delete --> It is used to remove one or more row from a table.
	DQL - data query language language
		1.grant --> It is used to give user access privileges to a database.
		2. revoke --> It is used to take back permissions from the user.
	DCL - data control language
		1. select --> It is used to select the attribute based on the condition described by WHERE clause.
	TCL - transaction control language
		1.commit --> Command to save all the work you have already done in the database. 
		2.rollback --> Command to restore a database to the last committed state.

Advantages of SQL
	1. User friendly --> sql requiers very little coding skill to use
	2. standard language --> compatible with all available relational db	
	3. portable lang --> sql can be used on any hardware running any operating system
	4. comprehebsive language --> covers all areas of datanase management administration
	5. data processing --> sql process large amounts of data quickly and efficiently

	
Syntax 

1. DML COMMANDS

1. create database
      CREATE databse_name;

2. create table
      CREATE TABLE table_name(
		col1 datatype,
		col2 datatype)

3. insert  records
      INSERT INTO table_name(col1, col2..) VALUES (value1, value2,value3,....)

4. update
	UPDATE tble_name SET col_name = "" WHERE (condition)

5. delete
	DELETE FROM table_name WHERE condtion


2.DQL COMMANDS 

1.select
   select * from table_name --> select all records from that table


Database structure 
	table -- entities , where data is stored
	Attributes which are details about the table or entity.
	Fields, which are columns used to capture attributes. 
	A record, which is one row of details about a table or entity. 
	And the primary key, which is a unique value for an entity. 


Datatypes
	Numeric data types such as INT, TINYINT, BIGINT, FLOAT and REAL. 
	Date and time data types such as DATE, TIME and DATETIME. 
	Character and string data types such as CHAR and VARCHAR.
	Binary data types such as BINARY and VARBINARY. 
	And miscellaneous data types such as: 
		Character Large Object (CLOB), for storing a large block of text in some form of text encoding.  
		and Binary Large Object (BLOB), for storing a collection of binary data such as images. 
	 TINYTEXT is used to define columns that require less than 255 characters, like short paragraphs. 	 TEXT is used to define columns of less than 65,000 characters, like an article. 
	 MEDIUMTEXT defined columns of 16.7 million characters. For example, the text of a book. The 		LONGTEXT datatype stores up to four gigabytes of text data. 


TABLES 
	The table is made up of rows and columns which hold data and a table is stored in a database in a database that holds multiple tables
	An entity is an object that is attributes that are like columns or fields in a table.
	A domain is the set of legal values that can be assigned to an attribute basically this means making sure that the values of field can hold are well defined. 
	Primary key --> A column in the table that has unique values will become the primary key of the table. 


CONSTRAINTS 
	Every table in a database should abide by rules or constraints. These are known as integrity constraints.

What are key constraints?
	there should be one or more columns or fields that can be used to fetch data from tables
	key attribute or primary key should never be NULL or the same for two different rows of data.
		primary key --> not null value it will be unique.
		foreign key --> may be null value, and related with one table to another
		check --> specific condition will satisfy check constraint will work
		default -->  sets a default value for a column of no value is specified.atabase default constraints limit the value of data that can be stored in a table, so it ensures the accuracy and reliability of data that’s held in the table.
What are domain constraints?
	refer to the rules defined for the values that can be stored for a certain column
	
What are referential integrity constraints?
	When a table is related to another table via a foreign key column, then the referenced column value must exist in the other table.
	
  

Logical database structure
	The logical structure of a database is represented using a diagram known as the Entity Relationship Diagram (ERD). 
	This is also known as cardinality of relationships. 
		One-to-one relationships 
		One-to-many relationships 
		Many-to-many relationships 


Physical databases
	entities are implemented as tables, the relationships are established using a field known as a foreign key.

 

operators
    Operators can be used along with select command
    ex : SELECT col_name FROM table_name WHERE col1 + col2;

Comparision operators
	1. = --> Checks if the values of two operands are equal or not. If yes, then condition becomes true.
	2. != --> Checks if the values of two operands are equal or not. If values are not equal, then condition becomes true.
	3. <> --> Checks if the values of two operands are equal or not. If values are not equal, then condition becomes true.
	4. > --> Checks if the value of the left operand is greater than the value of the right operand. If yes, then condition becomes true.
	5. < --> Checks if the value of left operand is less than the value of right operand. If yes, then condition becomes true.
	6. >= --> Checks if the value of the left operand is greater than or equal to the value of right operand. If yes, then condition becomes true.
	7. <= --> check if the value of the left operand is less than or equal to the value of the right operand. If yes then condition becomes true.
	8. !< --> Checks if the value of the left operand is not less than the value of the right operand. If yes, then condition becomes true.
	9. !> --> Checks if the value of the left operand is not greater than the value of the right operand. If yes, then condition becomes true.

WHERE CLAUSE
	1. ALL --> Used to compare a single value to all the values in another value set.
	2. AND --> Allows for the existence of multiple conditions in an SQL statement's WHERE clause.
	3. ANY --> Used to compare a value to any applicable value in the list as per the condition.
	4. BETWEEN --> Used to search for values that are within a set of values, given the minimum value and the maximum value.
	5. EXISTS --> Used to search for the presence of a row in a specified table that meets a certain criterion.
	6. IN --> Used to compare a value to a list of literal values that have been specified.
	7. LIKE --> Used to compare a value to similar values using wildcard operators.
NOTReverses the meaning of the logical operator with which it is used. For example: NOT EXISTS, NOT 	BETWEEN, NOT IN, etc. This is a negate operator.
	8. OR --> Used to combine multiple conditions in an SQL statement's WHERE clause.
	9. IS NULL --> Used to compare a value with a NULL value.
	10. UNIQUESearches every row of a specified table for uniqueness (no duplicates).

	ex : SELECT column1, column2, columnN  FROM table_name WHERE [condition1] AND [condition2]...AND [conditionN]; 



Database schema:
	Database schema is about the structure of a database
	Data in a database is organized into tables that have columns and rows. 
	Each column or field has a defined data type, and the tables are related to each other.
	Database schema can be broadly divided into three categories. 
		Conceptual or logical schema that defines entities, attributes and relationships. 
		Internal or physical schema that defines how data is stored in a secondary storage. In other words, the actual storage of data and access paths. 
		External or view schema that defines different user views. 

	1. Conceptual or logical
		The conceptual or logical schema describes the structure of the entire database for all the users. 
		It describes the structure in terms of entities and features of the entities and the relationships between them.
		An Entity Relationship Diagram (ER-D) is usually drawn to represent the logical schema of a database.

	2. Internal or physical 
		describes the physical storage of the database
		This means it describes how the data is really stored on disk in the form of tables, columns and records. 
		It defines what data is stored in the database and how.

	3.External or view 
		 describes the database like an external user would want to see it. 
		 It hides the nonrelevant details of the database from a user.
		
	Basically, a database schema consists of:
		all the important data pertaining to a given scenario and their relationships, 
		unique keys for all entries and database objects, 
		and a name and data type for each column in a table. 	


Types of relaitonship in database
	1.One to One relationship
		It is used to create a relationship between two tables in which a single row of the first table can only be related to one and only one records of a second table.
	2.One to many or 
		Any single rows of the first table can be related to one or more rows of the second tables, but the rows of second tables can only relate to the only row in the first table. 
	3.many to one relationship
		one or more rows of the first table can be related to one row of the second tables, but 
	4.Many to many relationships
		Each record of the first table can relate to any records (or no records) in the second table. Similarly, each record of the second table can also relate to more than one record of the first table.


Realtional databases
	1.Data,  

	2.Relationships
	    ->	Data can be store in tables. each table has rows and columns, row-->recored or tuple, column --> filed or attributes 
		i)column 
			Each table cell that becomes a part of a row will have a specific instance of a piece of data
		ii)row 
			Each row or tuple has one or more attributes, known as a relation key, that can uniquely identify a specific row. This is also known as the primary key.
		iii)Degree 
			Degree is the number of columns or attributes within a relation.
		iv)Cardinality 
			refers to how many records there are within a particular table in a database.

	3.constraints.
		i) key constraint
			The key constraint revolves around the key attribute
			key attribute is an identifier that can be used to refer to a record. 
			It must also be unique for each record.
		ii) Domain constraints
			 about the requirement of inserting values that have a valid data type.
		iii) Referential integrity constraints
			Based on foreign key concept
			A foreign key is a key attribute present in a table, which is also a primary key of another table to which it needs to be linked	
		



1.primary key
        it must be unique
	no duplicates can be allowed
	it is used to indentify the specific record from the large data base
2.foreign key
	it is a key that is primary key in another table and help to linked two tables
3.candidate key
	oru table la attribute rendu record ku same a iruntha antha table kandipa one or more than one candidate key irukum, which is unique and no repeated attributes
	an attribute that's unique to each row of the table
4.Composite primary key
	if a table has no candidate or primary key, all attributes are repeated, then composite will help
	it is combination of two or more attributes



Normalization
	 Normalization is an important process used in database systems. It structures tables in a way that minimizes challenges by reducing data duplication, avoiding data modification implications and helping to simplify data queries from the database. 

1.CREATE DATABASE SportsClub;
2.table 
3.VALUES
4.Karl
5.SELECT playerName FROM Players;
6.UPDATE Players SET age=22 WHERE PlayerID=3;
7.DELETE FROM Players WHERE playerID=4;
8.
9.
10.
11.A RECORD
12.The Full name column data type is VARCHAR.
   The Player number column data type is INT.
13.level INT DEFAULT 1;
14.True 
15.True
16.False
17.It displays the results ordered by country first, then players name. 
18.FALSE
19.DIA 2
20.Many to one relationship. 
